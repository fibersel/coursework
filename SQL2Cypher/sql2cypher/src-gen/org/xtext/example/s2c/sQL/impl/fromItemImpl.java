/**
 * generated by Xtext 2.25.0
 */
package org.xtext.example.s2c.sQL.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.xtext.example.s2c.sQL.SQLPackage;
import org.xtext.example.s2c.sQL.boolExpression;
import org.xtext.example.s2c.sQL.fromItem;
import org.xtext.example.s2c.sQL.select;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>from Item</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.s2c.sQL.impl.fromItemImpl#getTable_name <em>Table name</em>}</li>
 *   <li>{@link org.xtext.example.s2c.sQL.impl.fromItemImpl#getSelect_expr <em>Select expr</em>}</li>
 *   <li>{@link org.xtext.example.s2c.sQL.impl.fromItemImpl#getRhs <em>Rhs</em>}</li>
 *   <li>{@link org.xtext.example.s2c.sQL.impl.fromItemImpl#getBool_expr <em>Bool expr</em>}</li>
 * </ul>
 *
 * @generated
 */
public class fromItemImpl extends MinimalEObjectImpl.Container implements fromItem
{
  /**
   * The default value of the '{@link #getTable_name() <em>Table name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTable_name()
   * @generated
   * @ordered
   */
  protected static final String TABLE_NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getTable_name() <em>Table name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTable_name()
   * @generated
   * @ordered
   */
  protected String table_name = TABLE_NAME_EDEFAULT;

  /**
   * The cached value of the '{@link #getSelect_expr() <em>Select expr</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSelect_expr()
   * @generated
   * @ordered
   */
  protected select select_expr;

  /**
   * The cached value of the '{@link #getRhs() <em>Rhs</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRhs()
   * @generated
   * @ordered
   */
  protected fromItem rhs;

  /**
   * The cached value of the '{@link #getBool_expr() <em>Bool expr</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getBool_expr()
   * @generated
   * @ordered
   */
  protected boolExpression bool_expr;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected fromItemImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return SQLPackage.Literals.FROM_ITEM;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getTable_name()
  {
    return table_name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setTable_name(String newTable_name)
  {
    String oldTable_name = table_name;
    table_name = newTable_name;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SQLPackage.FROM_ITEM__TABLE_NAME, oldTable_name, table_name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public select getSelect_expr()
  {
    return select_expr;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetSelect_expr(select newSelect_expr, NotificationChain msgs)
  {
    select oldSelect_expr = select_expr;
    select_expr = newSelect_expr;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, SQLPackage.FROM_ITEM__SELECT_EXPR, oldSelect_expr, newSelect_expr);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setSelect_expr(select newSelect_expr)
  {
    if (newSelect_expr != select_expr)
    {
      NotificationChain msgs = null;
      if (select_expr != null)
        msgs = ((InternalEObject)select_expr).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - SQLPackage.FROM_ITEM__SELECT_EXPR, null, msgs);
      if (newSelect_expr != null)
        msgs = ((InternalEObject)newSelect_expr).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - SQLPackage.FROM_ITEM__SELECT_EXPR, null, msgs);
      msgs = basicSetSelect_expr(newSelect_expr, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SQLPackage.FROM_ITEM__SELECT_EXPR, newSelect_expr, newSelect_expr));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public fromItem getRhs()
  {
    return rhs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetRhs(fromItem newRhs, NotificationChain msgs)
  {
    fromItem oldRhs = rhs;
    rhs = newRhs;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, SQLPackage.FROM_ITEM__RHS, oldRhs, newRhs);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setRhs(fromItem newRhs)
  {
    if (newRhs != rhs)
    {
      NotificationChain msgs = null;
      if (rhs != null)
        msgs = ((InternalEObject)rhs).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - SQLPackage.FROM_ITEM__RHS, null, msgs);
      if (newRhs != null)
        msgs = ((InternalEObject)newRhs).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - SQLPackage.FROM_ITEM__RHS, null, msgs);
      msgs = basicSetRhs(newRhs, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SQLPackage.FROM_ITEM__RHS, newRhs, newRhs));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolExpression getBool_expr()
  {
    return bool_expr;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetBool_expr(boolExpression newBool_expr, NotificationChain msgs)
  {
    boolExpression oldBool_expr = bool_expr;
    bool_expr = newBool_expr;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, SQLPackage.FROM_ITEM__BOOL_EXPR, oldBool_expr, newBool_expr);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setBool_expr(boolExpression newBool_expr)
  {
    if (newBool_expr != bool_expr)
    {
      NotificationChain msgs = null;
      if (bool_expr != null)
        msgs = ((InternalEObject)bool_expr).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - SQLPackage.FROM_ITEM__BOOL_EXPR, null, msgs);
      if (newBool_expr != null)
        msgs = ((InternalEObject)newBool_expr).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - SQLPackage.FROM_ITEM__BOOL_EXPR, null, msgs);
      msgs = basicSetBool_expr(newBool_expr, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SQLPackage.FROM_ITEM__BOOL_EXPR, newBool_expr, newBool_expr));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case SQLPackage.FROM_ITEM__SELECT_EXPR:
        return basicSetSelect_expr(null, msgs);
      case SQLPackage.FROM_ITEM__RHS:
        return basicSetRhs(null, msgs);
      case SQLPackage.FROM_ITEM__BOOL_EXPR:
        return basicSetBool_expr(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case SQLPackage.FROM_ITEM__TABLE_NAME:
        return getTable_name();
      case SQLPackage.FROM_ITEM__SELECT_EXPR:
        return getSelect_expr();
      case SQLPackage.FROM_ITEM__RHS:
        return getRhs();
      case SQLPackage.FROM_ITEM__BOOL_EXPR:
        return getBool_expr();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case SQLPackage.FROM_ITEM__TABLE_NAME:
        setTable_name((String)newValue);
        return;
      case SQLPackage.FROM_ITEM__SELECT_EXPR:
        setSelect_expr((select)newValue);
        return;
      case SQLPackage.FROM_ITEM__RHS:
        setRhs((fromItem)newValue);
        return;
      case SQLPackage.FROM_ITEM__BOOL_EXPR:
        setBool_expr((boolExpression)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case SQLPackage.FROM_ITEM__TABLE_NAME:
        setTable_name(TABLE_NAME_EDEFAULT);
        return;
      case SQLPackage.FROM_ITEM__SELECT_EXPR:
        setSelect_expr((select)null);
        return;
      case SQLPackage.FROM_ITEM__RHS:
        setRhs((fromItem)null);
        return;
      case SQLPackage.FROM_ITEM__BOOL_EXPR:
        setBool_expr((boolExpression)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case SQLPackage.FROM_ITEM__TABLE_NAME:
        return TABLE_NAME_EDEFAULT == null ? table_name != null : !TABLE_NAME_EDEFAULT.equals(table_name);
      case SQLPackage.FROM_ITEM__SELECT_EXPR:
        return select_expr != null;
      case SQLPackage.FROM_ITEM__RHS:
        return rhs != null;
      case SQLPackage.FROM_ITEM__BOOL_EXPR:
        return bool_expr != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (table_name: ");
    result.append(table_name);
    result.append(')');
    return result.toString();
  }

} //fromItemImpl
